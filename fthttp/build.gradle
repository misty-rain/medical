import com.android.build.gradle.AppPlugin
import com.android.build.gradle.LibraryPlugin
import proguard.gradle.ProGuardTask

apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    lintOptions{
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled true
            buildConfigField "boolean", "ENABLE_DEBUG", "false"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "boolean", "ENABLE_DEBUG", "true"
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile files('libs/okhttp-3.0.1.jar')
    compile files('libs/okio-1.4.0.jar')
}

/*
def enableLoggerDebug(boolean flag) {
    def loggerFilePath = "src/main/java/com/friendtime/http/utils/Logger.java"
    def updatedDebug = new File(loggerFilePath).getText('UTF-8')
            .replaceAll("isDebug\\s?=\\s?" + (!flag).toString(), "isDebug = " + flag.toString())
    new File(loggerFilePath).write(updatedDebug, 'UTF-8')
    println(flag ? 'Logger.isDebug : [true]' : 'Logger.isDebug : [false]')
}

preBuild {}.doFirst {
    if (('jarMyLib' in gradle.startParameter.taskNames)) {
        enableLoggerDebug(false)
    }
}
*/


task releaseMyLib(type: Copy, dependsOn: ['build']) {
    from( 'build/intermediates/bundles/release/')
    into( 'build/libs')
    include('classes.jar')
    rename('classes.jar', 'my-lib.jar')
}
task jarMyLib(type: Jar, dependsOn: ['build']) {
    archiveName = 'my-lib.jar'
    from('build/intermediates/classes/release')
    jarMyLib.from(project.zipTree('libs/okhttp-3.0.1.jar'))
    jarMyLib.from(project.zipTree('libs/okio-1.4.0.jar'))
    destinationDir = file('build/libs')
    exclude('com/friendtime/http/BuildConfig.class')
    exclude('com/friendtime/http/BuildConfig\$*.class')
    exclude('**/R.class')
    exclude('**/R\$*.class')
    exclude('android/**')
}


